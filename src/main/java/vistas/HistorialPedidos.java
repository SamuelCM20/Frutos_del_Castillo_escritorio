/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package vistas;

import controladores.ControladorReportes;
import controladores.ControladorFacturas;
import controladores.ControladorMesas;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import controladores.ControladorPedidos;
import controladores.ControladorProductos;
import controladores.ControladorUtils;
import controladores.CustomCellRenderer;
import controladores.CustomHeaderRenderer;
import java.io.FileOutputStream;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFColor;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author jdelg
 */
public class HistorialPedidos extends javax.swing.JDialog {

    /**
     * Creates new form HistorialPedidos
     */
    public HistorialPedidos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        tableModel();
        fillRows();
        tablaPedidos.getTableHeader().setDefaultRenderer(new CustomHeaderRenderer());
        tablaPedidos.setDefaultRenderer(Object.class, new CustomCellRenderer());
    }

    private DefaultTableModel modelTableHistorial;
    private ControladorPedidos objControlador = new ControladorPedidos();
    private ControladorProductos objControladorProductos = new ControladorProductos();
    private ControladorMesas objControladorMesas = new ControladorMesas();
    private ControladorFacturas objControladorFacturas = new ControladorFacturas();
    private ControladorUtils objControladorUtils = new ControladorUtils();
    private List<Modelo.Compra> listaPedidos;

    public void tableModel() {
        String[] titulosTablaCompras = {"Fecha", "Empleado", "Mesa"};
        modelTableHistorial = objControladorUtils.addTableModel(modelTableHistorial, tablaPedidos, titulosTablaCompras);
    }

    public void fillRows() {
        modelTableHistorial.setRowCount(0);
        listaPedidos = objControlador.getPedidosHistorial();

        listaPedidos.forEach(l -> {
            Modelo.Mesas objMesa = objControladorMesas.getMesa(l.getMesas_id());
            Modelo.Users objUser = objControlador.getUsuario(l.getUsuarios_id());
            modelTableHistorial.addRow(new Object[]{l.getFecha_hora(), objUser.getNombre(), objMesa});
        });
    }

    public void runView() {
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPedidos = new javax.swing.JTable();
        labelTitlePedidos = new javax.swing.JLabel();
        btnReportes = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Historial de pedidos");
        setBackground(new java.awt.Color(245, 245, 220));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(245, 245, 220));

        tablaPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Fecha", "Empleado", "Mesa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaPedidos.setFocusable(false);
        tablaPedidos.setSelectionBackground(new java.awt.Color(173, 0, 113));
        tablaPedidos.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tablaPedidos.getTableHeader().setResizingAllowed(false);
        tablaPedidos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaPedidos);

        labelTitlePedidos.setBackground(new java.awt.Color(255, 255, 255));
        labelTitlePedidos.setFont(new java.awt.Font("Boring Sans A Trial", 1, 36)); // NOI18N
        labelTitlePedidos.setForeground(new java.awt.Color(85, 21, 22));
        labelTitlePedidos.setText("Historial de pedidos");

        btnReportes.setBackground(new java.awt.Color(96, 29, 73));
        btnReportes.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnReportes.setForeground(new java.awt.Color(255, 255, 255));
        btnReportes.setText("Reporte");
        btnReportes.setFocusPainted(false);
        btnReportes.setFocusable(false);
        btnReportes.setMinimumSize(new java.awt.Dimension(88, 28));
        btnReportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportesActionPerformed(evt);
            }
        });

        btnActualizar.setBackground(new java.awt.Color(96, 29, 73));
        btnActualizar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnActualizar.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizar.setText("Actualizar");
        btnActualizar.setFocusPainted(false);
        btnActualizar.setFocusable(false);
        btnActualizar.setMinimumSize(new java.awt.Dimension(88, 28));
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTitlePedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                            .addComponent(btnReportes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(labelTitlePedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnReportes, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnReportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportesActionPerformed

        //validaci√≥n
        if (modelTableHistorial.getRowCount() != 0) {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Guardar como");
            fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            fileChooser.setAcceptAllFileFilterUsed(false);
            fileChooser.setFileFilter(new FileNameExtensionFilter("Excel Files (*.xlsx)", "xlsx"));

            int userSelection = fileChooser.showSaveDialog(null);
            if (userSelection == JFileChooser.APPROVE_OPTION) {
                String fileName = fileChooser.getSelectedFile().getName().replaceFirst("[.][^.]+$", "");
                String filePath = fileChooser.getSelectedFile().getParent();

                ControladorReportes objReportes = new ControladorReportes();
                boolean generado = objReportes.generarReporteExcel(listaPedidos, fileName, filePath);

                if (generado) {
                    JOptionPane.showMessageDialog(null, "Reporte guardado con exito.");
                } else {
                    JOptionPane.showMessageDialog(this, "Hubo un error al guardar el reporte.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "No hay datos para imprimir.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnReportesActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        fillRows();
    }//GEN-LAST:event_btnActualizarActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnReportes;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelTitlePedidos;
    private javax.swing.JTable tablaPedidos;
    // End of variables declaration//GEN-END:variables
}
